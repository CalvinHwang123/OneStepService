<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" 
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="oss.mapper.BusiManageMapper">
	<!-- 作品 -->
	<select id="listWorks" resultMap="worksMap" parameterType="oss.bean.Condition">
		select
		A.Worksid,A.Worksname,A.Userid,A.Worksnum,A.Worksprice,A.Classificationid,A.Worksstatusid,B.Classificationname,B.Classificationpid,c.userName,c.userCredit
		from works a, classification b, users c where
		A.Classificationid=B.Classificationid and A.Userid=C.Userid
		<if test="startDate != null and startDate !=''">
			and worksName like concat(concat('%',#{startDate}),'%')
		</if>
		<if test="endDate != null and endDate !='' ">
			and checkUser.userName like
			concat(concat('%',#{endDate}),'%')
		</if>
		<if test="classPid != 0">
			and dynamicTitle =#{classPid}
		</if>
	</select>

	<resultMap type="oss.bean.Works" id="worksMap">
		<id property="worksId" column="worksId" />
		<result property="usersId" column="usersId" />
		<result property="classificationId" column="classificationId" />
		<result property="worksName" column="worksName" />
		<result property="worksPrice" column="worksPrice" />
		<result property="worksNum" column="worksNum" />
		<result property="worksStatusId" column="worksStatusId" />
		<result property="url" column="url" />
		<association property="checkClass" javaType="oss.bean.Classification">
			<id property="classificationId" column="classificationId" />
			<result property="classificationName" column="classificationName" />
			<result property="classificationPid" column="classificationPid" />
		</association>
		<association property="checkUser" javaType="oss.bean.Users">
			<id property="userID" column="userID" />
			<result property="userName" column="userName" />
			<result property="userCredit" column="userCredit" />
		</association>
	</resultMap>



	<!-- 修改动态 -->
	<update id="updateWorksById" parameterType="oss.bean.Works">
		update Works set
		worksStatusId=#{worksStatusId} where worksId=#{worksId}
	</update>

	<!-- 发布作品 hlq 2018-06-27 20:14 -->
	<insert id="insertWorks" parameterType="oss.bean.Works">
		<selectKey keyProperty="worksId" order="BEFORE" resultType="long">
			select workersSeq.nextVal from dual
		</selectKey>
		insert into works
		(worksId, userId, worksName, classificationId, worksPrice, worksNum, worksStatusId, url, worksContext)
		values (#{worksId}, #{userId}, #{worksName}, #{classificationId}, #{worksPrice}, #{worksNum}, #{worksStatusId}, #{url}, #{worksContext})
	</insert>

	<!-- 修改作品成交量 hlq 2018-06-27 21:37 -->
	<update id="updateWorksNumById" parameterType="oss.bean.Works">
		update Works set
		worksNum=worksNum+1 where worksId=#{worksId}
	</update>
	
	<!-- 增加订单 hlq 2018-06-28 23:40 -->
	<insert id="addOrders" parameterType="oss.bean.Orders">
		<selectKey keyProperty="orderId" order="BEFORE" resultType="long">
			select orderSeq.nextVal from dual
		</selectKey>
		insert into orders
		(orderId, userId, orderStatusId, worksId, orderTime)
		values (#{orderId}, #{userId}, #{orderStatusId}, #{worksId}, #{orderTime})
	</insert>
	
	<!-- 根据id获取作品信息 -->
	<select id="selectWorksById" parameterType="java.lang.Long" resultType="oss.bean.Works">
		select * from works where worksId = #{worksId}
	</select>
	
	<!-- 查看该用户的订单信息 hlq 2018-06-30 10:46 -->
	<resultMap type="oss.bean.Orders" id="orderWorksMap">
		<id property="orderId" column="orderId" />
		<result property="userId" column="userId" />
		<result property="orderStatusId" column="orderStatusId" />
		<result property="orderTime" column="orderTime" />
		<association property="works" javaType="oss.bean.Works">
			<id property="worksId" column="worksId"/>
			<result property="classificationId" column="classificationId" />
			<result property="worksName" column="worksName" />
			<result property="worksContext" column="worksContext" />
			<result property="worksPrice" column="worksPrice" />
		</association>
		<association property="users" javaType="oss.bean.Users">
			<result property="userName" column="userName" />
			<result property="userBalance" column="userBalance" />
		</association>
	</resultMap>
	<select id="selectOrderWorksByUserId" parameterType="oss.bean.Condition" resultMap="orderWorksMap">
	select orders.orderId as orderId, orders.userId as userId,users.USERNAME as USERNAME,
	orders.orderStatusId as orderStatusId,
	orders.orderTime as orderTime, works.worksId as worksId,
	works.classificationId as classificationId, works.worksName as worksName, 
	works.worksContext as worksContext, works.worksPrice as worksPrice
	from orders, works,users where orders.worksId = works.worksId and works.USERID=users.USERID and orders.userId =
	#{classPid}
	<if
		test="startDate != null and endDate != null and startDate != '' and endDate != ''">
		and orders.orderTime between '${startDate} 00:00:00' and '${endDate} 23:59:59'
	</if>
</select>
<!--  服务商交易购买的作品 7-2 ynw 13:34 -->
<select id="facilitatororderWorksList" parameterType="oss.bean.Condition" resultMap="orderWorksMap">
		select orders.orderId as orderId, orders.userId as userId,users.USERNAME as USERNAME,
	orders.orderStatusId as orderStatusId,
	orders.orderTime as orderTime, works.worksId as worksId,
	works.classificationId as classificationId, works.worksName as worksName, 
	works.worksContext as worksContext, works.worksPrice as worksPrice
	from orders, works,users where orders.worksId = works.worksId and orders.USERID=users.USERID and works.USERID =
	#{classPid}
	<if
		test="startDate != null and endDate != null and startDate != '' and endDate != ''">
		and orders.orderTime between '${startDate} 00:00:00' and '${endDate} 23:59:59'
	</if>
</select>

<!-- 	服務商作品 -->
	<select id="serviceWorks" resultType="oss.bean.Works"
		parameterType="oss.bean.Users">
		select * from works where userID=#{userID}
	</select>
	
	<!--  发送/接收购买的作品 7-3 9:35 -->
	<update id="sendreceiveorderWorkst" parameterType="oss.bean.Orders">
		update orders set
		orderStatusId=#{orderStatusId} where orderId=#{orderId}
	</update>
	
	<!--  支付作品价格  -->
	<update id="Modifiedamount" parameterType="oss.bean.Orders">
		update users set
		userBalance=#{worksPrice} where userID=#{userId}
	</update>
	
	<!-- 查询用户余额 7-3 13:48 -->
	<select id="querybalance" parameterType="oss.bean.Orders" resultType="oss.bean.Users">
		select * from users where userID=#{userId}
	</select>
</mapper>
	